#! /usr/bin/env coffee

require("coffee-script")
cli = require('commander')
pack = require('../package.json')
fs = require('fs')

cli
  .version(pack.version)
  .option('-i, --input <file>', 'The input Elixir AST file')
  .option('-c, --compile [file]', 'Compile input AST and optionally save to [file]')
  .option('-t, --translate [file]', 'Translate input AST and optionally save to [file]')
  .option('-p, --parsed [file]', 'Parse input AST and optionally save to [file]')
  .parse(process.argv)

if cli.input
  console.log('input:', cli.input)
  exAst = fs.readFileSync(cli.input, 'utf-8')
  # console.log(exAst)

if cli.parsed
  console.log('parse:', cli.parsed)
  Parser = require('../lib/parser')
  json = (new Parser()).parse(exAst)
  console.log('%j', json)
  fs.writeFileSync(cli.parsed, JSON.stringify(json)) if typeof(cli.parsed) == 'string'

if cli.translate
  console.log('translate:', cli.translate)
  Translator = require('../lib/translator')
  jsAst = (new Translator()).translate(exAst)
  console.log('%j', jsAst)
  fs.writeFileSync(cli.translate, JSON.stringify(jsAst)) if typeof(cli.translate) == 'string'

if cli.compile
  console.log('compile:', cli.compile)
  Compiler = require('../lib/compiler')
  js = (new Compiler()).compile(exAst)
  console.log('%j', js)
  fs.writeFileSync(cli.compile, js) if typeof(cli.compile) == 'string'

